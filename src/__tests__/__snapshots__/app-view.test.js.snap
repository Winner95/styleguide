// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App-view generic tests When app is open 1`] = `
<div
  className="sc-jNMdTA FEXVg"
>
  <div
    className="sc-bZSQDF sc-iUuytg bkUOWJ jpycat"
    onClick={[Function]}
  >
    <svg
      id="open"
      viewBox="0 0 20 15"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M0 1a1 1 0 011-1h18a1 1 0 110 2H1a1 1 0 01-1-1zM0 7.03a1 1 0 011-1h18a1 1 0 110 2H1a1 1 0 01-1-1zM1 12.06a1 1 0 100 2h18a1 1 0 000-2H1z"
      />
    </svg>
  </div>
  <div
    className="sc-bZSQDF sc-iBaPrD bkUOWJ gSrYKw"
    onClick={[Function]}
  >
    <svg
      id="close"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M6.23 4.81A1 1 0 004.8 6.23L10.6 12 4.8 17.77a1 1 0 101.42 1.42L12 13.4l5.78 5.78a1 1 0 001.4-1.42L13.42 12l5.78-5.77a1 1 0 10-1.41-1.42L12 10.6 6.23 4.8z"
      />
    </svg>
  </div>
  <aside
    className="sc-hiSbYr fYVumk sc-eggNIi jcvMQO"
  >
    <div
      className="sc-gWHgXt erOPBk"
    >
      <div
        className="sc-jcVebW gvYcCv"
      >
        <svg
          viewBox="0 0 44 44"
          xmlns="http://www.w3.org/2000/svg"
        >
          <rect
            fill="#7000E3"
            height="44"
            rx="3.9"
            width="44"
          />
          <path
            d="M28 11.3c-2.3 0-4.6 1-6 3-1.4-2-3.7-3-6-3-4.3 0-7.8 3.3-7.8 7.6 0 6.5 9.3 15 13.8 15s13.8-8.5 13.8-15c0-4.4-3.5-7.7-7.8-7.7"
            fill="#FF671B"
          />
        </svg>
      </div>
      <div
        className="sc-citwmv iOMzRU"
      >
        <div
          className="sc-gsTCUz eTRikO"
        >
          <input
            autoComplete="off"
            className="sc-dlfnbm fIzlLk"
            placeholder="Search component name"
            type="text"
            value=""
          />
          <div
            className="sc-hKgILt kZvQyL"
          >
            <div
              className="sc-bdfBwQ bHoZMY"
              role="presentation"
              size={0}
            >
              <svg
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M20.5 20.92l7.62 7.67-1.43 1.4-7.72-7.79A10.83 10.83 0 0 1 2 13.28v-.45a10.84 10.84 0 0 1 21.67 0v.45c0 2.98-1.21 5.68-3.16 7.64zM4 12.82v.46a8.83 8.83 0 0 0 17.67 0v-.45a8.83 8.83 0 0 0-17.67 0z"
                  fillRule="evenodd"
                />
              </svg>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="sc-cBNfnY ddxHA-D"
    >
      <nav
        className="sc-pFZIQ jpJWqU"
      >
        <div
          className="sc-jrAGrp eoKdvK"
        >
          <div
            className="sc-eCssSg dGaJds"
          >
            <div
              className="sc-jSgupP jooZFA"
              onClick={[Function]}
            >
              Structure
            </div>
            <div
              className="sc-gKsewC XLBKx"
            >
              <div
                className="sc-iBPRYJ iUHUNF"
              >
                <a
                  className="sc-fubCfw ipfxtQ"
                  data-vrt-locator="link"
                  href="#Structure-Component"
                >
                  Component
                </a>
              </div>
            </div>
          </div>
        </div>
        <div
          className="sc-jrAGrp eoKdvK"
        >
          <div
            className="sc-eCssSg dGaJds"
          >
            <div
              className="sc-jSgupP jooZFA"
              onClick={[Function]}
            >
              Components
            </div>
            <div
              className="sc-gKsewC XLBKx"
            >
              <div
                className="sc-iBPRYJ iUHUNF"
              >
                <a
                  className="sc-fubCfw ipfxtQ"
                  data-vrt-locator="link"
                  href="#Components-ErrorBoundary"
                >
                  ErrorBoundary
                </a>
              </div>
            </div>
          </div>
        </div>
      </nav>
    </div>
  </aside>
  <main
    className="sc-cTkwdZ hVYUVB"
  >
    <article
      className="sc-fKFyDc cNrfnb"
      data-id="welcome!"
    >
      <header
        className="styleguide-component__header"
      >
        <h1
          className="sc-bBXqnf yFNHO"
        >
          Welcome!
        </h1>
        <div
          className="sc-iwyYcG eiFfWJ"
        >
          Style guide is a tool to illustrate, sandbox and test your components.
        </div>
      </header>
    </article>
  </main>
</div>
`;

exports[`App-view generic tests When component is open 1`] = `
.c13 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  width: 24px;
  height: 24px;
  fill: currentColor;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  color: inherit;
}

.c13 > svg {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: inherit;
  width: inherit;
  max-height: inherit;
  height: inherit;
  background: inherit;
  fill: inherit;
}

.c40 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  width: 16px;
  height: 16px;
  fill: currentColor;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  color: inherit;
}

.c40 > svg {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: inherit;
  width: inherit;
  max-height: inherit;
  height: inherit;
  background: inherit;
  fill: inherit;
}

.c10 {
  position: relative;
  color: #ccc;
  font-family: sans-serif;
}

.c10:focus-within {
  color: #000;
}

.c11 {
  background-color: #fff;
  width: 100%;
  display: block;
  font-size: 16px;
  color: #303030;
  height: 40px;
  line-height: 32px;
  padding-left: calc(24px + 12px);
  border: 1px solid #ccc;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: none;
}

.c11:focus {
  border-color: #000;
}

.c11::-webkit-input-placeholder {
  color: #ccc;
  opacity: 1;
}

.c11:-moz-placeholder {
  color: #ccc;
  opacity: 1;
}

.c11::-moz-placeholder {
  color: #ccc;
  opacity: 1;
}

.c11:-ms-input-placeholder {
  color: #ccc;
  opacity: 1;
}

.c12 {
  position: absolute;
  top: 50%;
  left: 8px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: inherit;
}

.c17 {
  display: block;
}

.c18 {
  position: relative;
  display: block;
  padding: 16px;
  border-bottom: 1px solid #f0f0f0;
  background: #fff;
  color: #000;
  font-size: 16px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c19 {
  padding: 16px;
}

.c22 {
  padding: 16px;
  display: none;
}

.c20 {
  padding: 8px 16px;
}

.c21 {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #7000e3;
  font-weight: 600;
}

.c23 {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #666;
}

.c15 {
  position: relative;
  max-height: 100vh;
  font-family: sans-serif;
}

.c16 {
  position: relative;
  margin: 0;
  padding: 0;
  list-style: none;
}

.c34 {
  display: block;
}

.c36 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: pointer;
  background: #f0f0f0;
  border-radius: 4px 4px 0 0;
  color: #000;
  padding: 0 16px;
}

.styleguide-sandbox .c35:only-child {
  border-radius: 4px;
}

.c37 {
  margin: 0;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  font-size: 16px;
  font-weight: 300;
  font-family: sans-serif;
  padding: 16px 0;
  word-break: break-word;
}

.c38 {
  margin-left: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c39 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  color: #202020;
  opacity: 0.5;
  -webkit-transition: opacity 0.1s ease;
  transition: opacity 0.1s ease;
  padding: 0 8px;
}

.c39:hover {
  opacity: 1;
}

.c41 {
  padding: 20px;
  border: 1px solid #f0f0f0;
  border-top: 0;
  box-shadow: 0 -1px 0 0 #f0f0f0;
  -webkit-transform: translate3d(0,0,0);
  -ms-transform: translate3d(0,0,0);
  transform: translate3d(0,0,0);
}

.c29 {
  padding-top: 32px;
}

.c30 {
  margin-top: 0;
  margin-bottom: 8px;
  font-size: 32px;
  color: #000;
  font-family: sans-serif;
  word-break: break-word;
}

.c31 {
  font-family: sans-serif;
  font-size: 16px;
  color: #a0a0a0;
  margin-bottom: 16px;
  max-width: 50%;
}

.c32 {
  margin-top: 16px;
}

.c33 + .c33 {
  margin-top: 32px;
}

.c26 + .c26 {
  margin-top: 32px;
}

.c27 {
  max-width: 960px;
  min-width: 320px;
  margin: auto;
}

.c28 + .c28 {
  margin-top: 40px;
}

.c4 {
  -webkit-font-smoothing: antialiased;
  position: relative;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  background: #f0f0f0;
  border-right: 1px solid #f0f0f0;
  width: inherit;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 16px 0;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c14 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  overflow-y: auto;
}

.c9 {
  width: 100%;
  padding: 0 16px;
}

.c8 {
  width: 32px;
  height: 32px;
  margin-bottom: 8px;
}

.c1 {
  position: fixed;
  z-index: 3;
  cursor: pointer;
  width: 24px;
  height: 24px;
  -webkit-transition: all 0.2s cubic-bezier(0.34,1.56,0.64,1);
  transition: all 0.2s cubic-bezier(0.34,1.56,0.64,1);
}

.c1 svg {
  pointer-events: none;
  fill: currentColor;
}

.c2 {
  top: 16px;
  left: 16px;
  -webkit-transform: translate3d(-50px,0px,0px);
  -ms-transform: translate3d(-50px,0px,0px);
  transform: translate3d(-50px,0px,0px);
}

.c3 {
  top: 16px;
  left: 316px;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
  opacity: 1;
}

.c6 {
  -webkit-transition: -webkit-transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  -webkit-transition: transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  transition: transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  position: fixed;
  left: 0;
  top: 0;
  bottom: 0;
  width: 300px;
  z-index: 1;
  will-change: transform;
}

.c25 {
  min-width: 0;
  padding: 32px;
  position: relative;
  background: #fff;
  width: calc(100% - 300px);
  -webkit-transition: -webkit-transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  -webkit-transition: transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  transition: transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  will-change: transform;
}

.c0 {
  background: #fff;
}

.c0 .c5 {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.c0 .c24 {
  -webkit-transform: translateX(300px);
  -ms-transform: translateX(300px);
  transform: translateX(300px);
}

@media screen and (max-width:376px) {
  .c37 {
    -webkit-flex: 1 1 auto;
    -ms-flex: 1 1 auto;
    flex: 1 1 auto;
    overflow: hidden;
    text-overflow: ellipsis;
    word-break: initial;
  }
}

@media screen and (max-width:376px) {
  .c29 {
    padding-top: 16px;
  }
}

@media screen and (max-width:376px) {
  .c27 {
    min-width: auto;
  }
}

@media screen and (min-width:1440px) {
  .c27 {
    max-width: 1440px;
  }
}

@media screen and (max-width:376px) {
  .c3 {
    right: 16px;
    left: initial;
  }
}

@media screen and (max-width:376px) {
  .c0 .c5 {
    right: 0;
    width: auto;
  }
}

@media screen and (max-width:376px) {
  .c0 .c24 {
    width: 100%;
    -webkit-transform: translateX(0);
    -ms-transform: translateX(0);
    transform: translateX(0);
  }
}

<div
  className="c0"
>
  <div
    className="c1 c2"
    onClick={[Function]}
  >
    <svg
      id="open"
      viewBox="0 0 20 15"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M0 1a1 1 0 011-1h18a1 1 0 110 2H1a1 1 0 01-1-1zM0 7.03a1 1 0 011-1h18a1 1 0 110 2H1a1 1 0 01-1-1zM1 12.06a1 1 0 100 2h18a1 1 0 000-2H1z"
      />
    </svg>
  </div>
  <div
    className="c1 c3"
    onClick={[Function]}
  >
    <svg
      id="close"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M6.23 4.81A1 1 0 004.8 6.23L10.6 12 4.8 17.77a1 1 0 101.42 1.42L12 13.4l5.78 5.78a1 1 0 001.4-1.42L13.42 12l5.78-5.77a1 1 0 10-1.41-1.42L12 10.6 6.23 4.8z"
      />
    </svg>
  </div>
  <aside
    className="c4 c5 c6"
  >
    <div
      className="c7"
    >
      <div
        className="c8"
      >
        <svg
          viewBox="0 0 44 44"
          xmlns="http://www.w3.org/2000/svg"
        >
          <rect
            fill="#7000E3"
            height="44"
            rx="3.9"
            width="44"
          />
          <path
            d="M28 11.3c-2.3 0-4.6 1-6 3-1.4-2-3.7-3-6-3-4.3 0-7.8 3.3-7.8 7.6 0 6.5 9.3 15 13.8 15s13.8-8.5 13.8-15c0-4.4-3.5-7.7-7.8-7.7"
            fill="#FF671B"
          />
        </svg>
      </div>
      <div
        className="c9"
      >
        <div
          className="c10"
        >
          <input
            autoComplete="off"
            className="c11"
            placeholder="Search component name"
            type="text"
            value=""
          />
          <div
            className="c12"
          >
            <div
              className="c13"
              role="presentation"
              size={0}
            >
              <svg
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M20.5 20.92l7.62 7.67-1.43 1.4-7.72-7.79A10.83 10.83 0 0 1 2 13.28v-.45a10.84 10.84 0 0 1 21.67 0v.45c0 2.98-1.21 5.68-3.16 7.64zM4 12.82v.46a8.83 8.83 0 0 0 17.67 0v-.45a8.83 8.83 0 0 0-17.67 0z"
                  fillRule="evenodd"
                />
              </svg>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="c14"
    >
      <nav
        className="c15"
      >
        <div
          className="c16"
        >
          <div
            className="c17"
          >
            <div
              className="c18"
              onClick={[Function]}
            >
              Structure
            </div>
            <div
              className="c19"
            >
              <div
                className="c20"
              >
                <a
                  className="c21"
                  data-vrt-locator="link"
                  href="#Structure-Component"
                >
                  Component
                </a>
              </div>
            </div>
          </div>
        </div>
        <div
          className="c16"
        >
          <div
            className="c17"
          >
            <div
              className="c18"
              onClick={[Function]}
            >
              Components
            </div>
            <div
              className="c22"
            >
              <div
                className="c20"
              >
                <a
                  className="c23"
                  data-vrt-locator="link"
                  href="#Components-ErrorBoundary"
                >
                  ErrorBoundary
                </a>
              </div>
            </div>
          </div>
        </div>
      </nav>
    </div>
  </aside>
  <main
    className="c24 c25"
  >
    <section
      className="c26 "
    >
      <div
        className="c27"
      >
        <div
          className="c28 "
        >
          <article
            className="c29"
            data-id="component"
          >
            <header
              className="styleguide-component__header"
            >
              <h1
                className="c30"
              >
                Component
              </h1>
              <div
                className="c31"
              >
                
              </div>
            </header>
            <div
              className="c32"
            >
              <div
                className="c33 "
              >
                <section
                  className="c34"
                  data-name="SpecComponentEmpty"
                  data-vrt-locator="sandbox"
                >
                  <header
                    className="c35 c36"
                  >
                    <h1
                      className="c37"
                      onClick={[Function]}
                      title="SpecComponentEmpty"
                    >
                      SpecComponentEmpty
                    </h1>
                    <div
                      className="c38"
                    >
                      <span
                        className="c39"
                        onClick={[Function]}
                      >
                        <div
                          className="c40"
                          role="presentation"
                        >
                          <svg
                            height="16"
                            width="16"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M13.444 2H2.556C1.696 2 1 2.696 1 3.556v9.333c0 .859.696 1.555 1.556 1.555h3.11V12.89h-3.11V5.11h10.888v7.778h-3.11v1.555h3.11c.856 0 1.556-.7 1.556-1.555V3.556C15 2.696 14.304 2 13.444 2zM8 6.667l-3.111 3.11h2.333v4.667h1.556V9.778h2.333L8 6.667z"
                            />
                          </svg>
                        </div>
                      </span>
                      <span
                        className="c39"
                        onClick={[Function]}
                      >
                        <div
                          className="c40"
                          role="presentation"
                        >
                          <svg
                            height="16"
                            width="16"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M1 12h3v3h2v-5H1v2zm3-8H1v2h5V1H4v3zm6 11h2v-3h3v-2h-5v5zm2-11V1h-2v5h5V4h-3z"
                            />
                          </svg>
                        </div>
                      </span>
                    </div>
                  </header>
                  <div
                    data-vrt-locator="sandbox-content"
                  >
                    <div
                      className="c41"
                    >
                      <article
                        className="c29"
                      >
                        <header
                          className="styleguide-component__header"
                        >
                          <h1
                            className="c30"
                          />
                          <div
                            className="c31"
                          />
                        </header>
                      </article>
                    </div>
                  </div>
                </section>
              </div>
              <div
                className="c33 "
              >
                <section
                  className="c34"
                  data-name="SpecComponentPropTypes"
                  data-vrt-locator="sandbox"
                >
                  <header
                    className="c35 c36"
                  >
                    <h1
                      className="c37"
                      onClick={[Function]}
                      title="SpecComponentPropTypes"
                    >
                      SpecComponentPropTypes
                    </h1>
                    <div
                      className="c38"
                    >
                      <span
                        className="c39"
                        onClick={[Function]}
                      >
                        <div
                          className="c40"
                          role="presentation"
                        >
                          <svg
                            height="16"
                            width="16"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M13.444 2H2.556C1.696 2 1 2.696 1 3.556v9.333c0 .859.696 1.555 1.556 1.555h3.11V12.89h-3.11V5.11h10.888v7.778h-3.11v1.555h3.11c.856 0 1.556-.7 1.556-1.555V3.556C15 2.696 14.304 2 13.444 2zM8 6.667l-3.111 3.11h2.333v4.667h1.556V9.778h2.333L8 6.667z"
                            />
                          </svg>
                        </div>
                      </span>
                      <span
                        className="c39"
                        onClick={[Function]}
                      >
                        <div
                          className="c40"
                          role="presentation"
                        >
                          <svg
                            height="16"
                            width="16"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M1 12h3v3h2v-5H1v2zm3-8H1v2h5V1H4v3zm6 11h2v-3h3v-2h-5v5zm2-11V1h-2v5h5V4h-3z"
                            />
                          </svg>
                        </div>
                      </span>
                    </div>
                  </header>
                  <div
                    data-vrt-locator="sandbox-content"
                  >
                    <div
                      className="c41"
                    >
                      <article
                        className="c29"
                      >
                        <header
                          className="styleguide-component__header"
                        >
                          <h1
                            className="c30"
                          />
                          <div
                            className="c31"
                          />
                        </header>
                      </article>
                    </div>
                  </div>
                </section>
              </div>
              <div
                className="c33 "
              >
                <section
                  className="c34"
                  data-name="SpecComponentFull"
                  data-vrt-locator="sandbox"
                >
                  <header
                    className="c35 c36"
                  >
                    <h1
                      className="c37"
                      onClick={[Function]}
                      title="SpecComponentFull"
                    >
                      SpecComponentFull
                    </h1>
                    <div
                      className="c38"
                    >
                      <span
                        className="c39"
                        onClick={[Function]}
                      >
                        <div
                          className="c40"
                          role="presentation"
                        >
                          <svg
                            height="16"
                            width="16"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M13.444 2H2.556C1.696 2 1 2.696 1 3.556v9.333c0 .859.696 1.555 1.556 1.555h3.11V12.89h-3.11V5.11h10.888v7.778h-3.11v1.555h3.11c.856 0 1.556-.7 1.556-1.555V3.556C15 2.696 14.304 2 13.444 2zM8 6.667l-3.111 3.11h2.333v4.667h1.556V9.778h2.333L8 6.667z"
                            />
                          </svg>
                        </div>
                      </span>
                      <span
                        className="c39"
                        onClick={[Function]}
                      >
                        <div
                          className="c40"
                          role="presentation"
                        >
                          <svg
                            height="16"
                            width="16"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M1 12h3v3h2v-5H1v2zm3-8H1v2h5V1H4v3zm6 11h2v-3h3v-2h-5v5zm2-11V1h-2v5h5V4h-3z"
                            />
                          </svg>
                        </div>
                      </span>
                    </div>
                  </header>
                  <div
                    data-vrt-locator="sandbox-content"
                  >
                    <div
                      className="c41"
                    >
                      <article
                        className="c29"
                      >
                        <header
                          className="styleguide-component__header"
                        >
                          <h1
                            className="c30"
                          />
                          <div
                            className="c31"
                          />
                        </header>
                      </article>
                    </div>
                  </div>
                </section>
              </div>
            </div>
          </article>
        </div>
      </div>
    </section>
  </main>
</div>
`;

exports[`App-view generic tests When filter doesn\`t show components 1`] = `
.c13 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  width: 24px;
  height: 24px;
  fill: currentColor;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  color: inherit;
}

.c13 > svg {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: inherit;
  width: inherit;
  max-height: inherit;
  height: inherit;
  background: inherit;
  fill: inherit;
}

.c10 {
  position: relative;
  color: #ccc;
  font-family: sans-serif;
}

.c10:focus-within {
  color: #000;
}

.c11 {
  background-color: #fff;
  width: 100%;
  display: block;
  font-size: 16px;
  color: #303030;
  height: 40px;
  line-height: 32px;
  padding-left: calc(24px + 12px);
  border: 1px solid #ccc;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: none;
}

.c11:focus {
  border-color: #000;
}

.c11::-webkit-input-placeholder {
  color: #ccc;
  opacity: 1;
}

.c11:-moz-placeholder {
  color: #ccc;
  opacity: 1;
}

.c11::-moz-placeholder {
  color: #ccc;
  opacity: 1;
}

.c11:-ms-input-placeholder {
  color: #ccc;
  opacity: 1;
}

.c12 {
  position: absolute;
  top: 50%;
  left: 8px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: inherit;
}

.c15 {
  position: relative;
  max-height: 100vh;
  font-family: sans-serif;
}

.c18 {
  padding-top: 32px;
}

.c19 {
  margin-top: 0;
  margin-bottom: 8px;
  font-size: 32px;
  color: #000;
  font-family: sans-serif;
  word-break: break-word;
}

.c20 {
  font-family: sans-serif;
  font-size: 16px;
  color: #a0a0a0;
  margin-bottom: 16px;
  max-width: 50%;
}

.c4 {
  -webkit-font-smoothing: antialiased;
  position: relative;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  background: #f0f0f0;
  border-right: 1px solid #f0f0f0;
  width: inherit;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 16px 0;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c14 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  overflow-y: auto;
}

.c9 {
  width: 100%;
  padding: 0 16px;
}

.c8 {
  width: 32px;
  height: 32px;
  margin-bottom: 8px;
}

.c1 {
  position: fixed;
  z-index: 3;
  cursor: pointer;
  width: 24px;
  height: 24px;
  -webkit-transition: all 0.2s cubic-bezier(0.34,1.56,0.64,1);
  transition: all 0.2s cubic-bezier(0.34,1.56,0.64,1);
}

.c1 svg {
  pointer-events: none;
  fill: currentColor;
}

.c2 {
  top: 16px;
  left: 16px;
  -webkit-transform: translate3d(-50px,0px,0px);
  -ms-transform: translate3d(-50px,0px,0px);
  transform: translate3d(-50px,0px,0px);
}

.c3 {
  top: 16px;
  left: 316px;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
  opacity: 1;
}

.c6 {
  -webkit-transition: -webkit-transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  -webkit-transition: transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  transition: transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  position: fixed;
  left: 0;
  top: 0;
  bottom: 0;
  width: 300px;
  z-index: 1;
  will-change: transform;
}

.c17 {
  min-width: 0;
  padding: 32px;
  position: relative;
  background: #fff;
  width: calc(100% - 300px);
  -webkit-transition: -webkit-transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  -webkit-transition: transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  transition: transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  will-change: transform;
}

.c0 {
  background: #fff;
}

.c0 .c5 {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.c0 .c16 {
  -webkit-transform: translateX(300px);
  -ms-transform: translateX(300px);
  transform: translateX(300px);
}

@media screen and (max-width:376px) {
  .c18 {
    padding-top: 16px;
  }
}

@media screen and (max-width:376px) {
  .c3 {
    right: 16px;
    left: initial;
  }
}

@media screen and (max-width:376px) {
  .c0 .c5 {
    right: 0;
    width: auto;
  }
}

@media screen and (max-width:376px) {
  .c0 .c16 {
    width: 100%;
    -webkit-transform: translateX(0);
    -ms-transform: translateX(0);
    transform: translateX(0);
  }
}

<div
  className="c0"
>
  <div
    className="c1 c2"
    onClick={[Function]}
  >
    <svg
      id="open"
      viewBox="0 0 20 15"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M0 1a1 1 0 011-1h18a1 1 0 110 2H1a1 1 0 01-1-1zM0 7.03a1 1 0 011-1h18a1 1 0 110 2H1a1 1 0 01-1-1zM1 12.06a1 1 0 100 2h18a1 1 0 000-2H1z"
      />
    </svg>
  </div>
  <div
    className="c1 c3"
    onClick={[Function]}
  >
    <svg
      id="close"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M6.23 4.81A1 1 0 004.8 6.23L10.6 12 4.8 17.77a1 1 0 101.42 1.42L12 13.4l5.78 5.78a1 1 0 001.4-1.42L13.42 12l5.78-5.77a1 1 0 10-1.41-1.42L12 10.6 6.23 4.8z"
      />
    </svg>
  </div>
  <aside
    className="c4 c5 c6"
  >
    <div
      className="c7"
    >
      <div
        className="c8"
      >
        <svg
          viewBox="0 0 44 44"
          xmlns="http://www.w3.org/2000/svg"
        >
          <rect
            fill="#7000E3"
            height="44"
            rx="3.9"
            width="44"
          />
          <path
            d="M28 11.3c-2.3 0-4.6 1-6 3-1.4-2-3.7-3-6-3-4.3 0-7.8 3.3-7.8 7.6 0 6.5 9.3 15 13.8 15s13.8-8.5 13.8-15c0-4.4-3.5-7.7-7.8-7.7"
            fill="#FF671B"
          />
        </svg>
      </div>
      <div
        className="c9"
      >
        <div
          className="c10"
        >
          <input
            autoComplete="off"
            className="c11"
            placeholder="Search component name"
            type="text"
            value="g"
          />
          <div
            className="c12"
          >
            <div
              className="c13"
              role="presentation"
              size={0}
            >
              <svg
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M20.5 20.92l7.62 7.67-1.43 1.4-7.72-7.79A10.83 10.83 0 0 1 2 13.28v-.45a10.84 10.84 0 0 1 21.67 0v.45c0 2.98-1.21 5.68-3.16 7.64zM4 12.82v.46a8.83 8.83 0 0 0 17.67 0v-.45a8.83 8.83 0 0 0-17.67 0z"
                  fillRule="evenodd"
                />
              </svg>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="c14"
    >
      <nav
        className="c15"
      />
    </div>
  </aside>
  <main
    className="c16 c17"
  >
    <article
      className="c18"
      data-id="welcome!"
    >
      <header
        className="styleguide-component__header"
      >
        <h1
          className="c19"
        >
          Welcome!
        </h1>
        <div
          className="c20"
        >
          Style guide is a tool to illustrate, sandbox and test your components.
        </div>
      </header>
    </article>
  </main>
</div>
`;

exports[`App-view generic tests When filter show components 1`] = `
.c13 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  width: 24px;
  height: 24px;
  fill: currentColor;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  color: inherit;
}

.c13 > svg {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: inherit;
  width: inherit;
  max-height: inherit;
  height: inherit;
  background: inherit;
  fill: inherit;
}

.c38 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  width: 16px;
  height: 16px;
  fill: currentColor;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  color: inherit;
}

.c38 > svg {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: inherit;
  width: inherit;
  max-height: inherit;
  height: inherit;
  background: inherit;
  fill: inherit;
}

.c10 {
  position: relative;
  color: #ccc;
  font-family: sans-serif;
}

.c10:focus-within {
  color: #000;
}

.c11 {
  background-color: #fff;
  width: 100%;
  display: block;
  font-size: 16px;
  color: #303030;
  height: 40px;
  line-height: 32px;
  padding-left: calc(24px + 12px);
  border: 1px solid #ccc;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: none;
}

.c11:focus {
  border-color: #000;
}

.c11::-webkit-input-placeholder {
  color: #ccc;
  opacity: 1;
}

.c11:-moz-placeholder {
  color: #ccc;
  opacity: 1;
}

.c11::-moz-placeholder {
  color: #ccc;
  opacity: 1;
}

.c11:-ms-input-placeholder {
  color: #ccc;
  opacity: 1;
}

.c12 {
  position: absolute;
  top: 50%;
  left: 8px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: inherit;
}

.c17 {
  display: block;
}

.c18 {
  position: relative;
  display: block;
  padding: 16px;
  border-bottom: 1px solid #f0f0f0;
  background: #fff;
  color: #000;
  font-size: 16px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c19 {
  padding: 16px;
}

.c20 {
  padding: 8px 16px;
}

.c21 {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #7000e3;
  font-weight: 600;
}

.c15 {
  position: relative;
  max-height: 100vh;
  font-family: sans-serif;
}

.c16 {
  position: relative;
  margin: 0;
  padding: 0;
  list-style: none;
}

.c32 {
  display: block;
}

.c34 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  cursor: pointer;
  background: #f0f0f0;
  border-radius: 4px 4px 0 0;
  color: #000;
  padding: 0 16px;
}

.styleguide-sandbox .c33:only-child {
  border-radius: 4px;
}

.c35 {
  margin: 0;
  -webkit-flex: 1 0 auto;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
  font-size: 16px;
  font-weight: 300;
  font-family: sans-serif;
  padding: 16px 0;
  word-break: break-word;
}

.c36 {
  margin-left: auto;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c37 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  color: #202020;
  opacity: 0.5;
  -webkit-transition: opacity 0.1s ease;
  transition: opacity 0.1s ease;
  padding: 0 8px;
}

.c37:hover {
  opacity: 1;
}

.c39 {
  padding: 20px;
  border: 1px solid #f0f0f0;
  border-top: 0;
  box-shadow: 0 -1px 0 0 #f0f0f0;
  -webkit-transform: translate3d(0,0,0);
  -ms-transform: translate3d(0,0,0);
  transform: translate3d(0,0,0);
}

.c27 {
  padding-top: 32px;
}

.c28 {
  margin-top: 0;
  margin-bottom: 8px;
  font-size: 32px;
  color: #000;
  font-family: sans-serif;
  word-break: break-word;
}

.c29 {
  font-family: sans-serif;
  font-size: 16px;
  color: #a0a0a0;
  margin-bottom: 16px;
  max-width: 50%;
}

.c30 {
  margin-top: 16px;
}

.c31 + .c31 {
  margin-top: 32px;
}

.c24 + .c24 {
  margin-top: 32px;
}

.c25 {
  max-width: 960px;
  min-width: 320px;
  margin: auto;
}

.c26 + .c26 {
  margin-top: 40px;
}

.c4 {
  -webkit-font-smoothing: antialiased;
  position: relative;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  background: #f0f0f0;
  border-right: 1px solid #f0f0f0;
  width: inherit;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 16px 0;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c14 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  overflow-y: auto;
}

.c9 {
  width: 100%;
  padding: 0 16px;
}

.c8 {
  width: 32px;
  height: 32px;
  margin-bottom: 8px;
}

.c1 {
  position: fixed;
  z-index: 3;
  cursor: pointer;
  width: 24px;
  height: 24px;
  -webkit-transition: all 0.2s cubic-bezier(0.34,1.56,0.64,1);
  transition: all 0.2s cubic-bezier(0.34,1.56,0.64,1);
}

.c1 svg {
  pointer-events: none;
  fill: currentColor;
}

.c2 {
  top: 16px;
  left: 16px;
  -webkit-transform: translate3d(-50px,0px,0px);
  -ms-transform: translate3d(-50px,0px,0px);
  transform: translate3d(-50px,0px,0px);
}

.c3 {
  top: 16px;
  left: 316px;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
  opacity: 1;
}

.c6 {
  -webkit-transition: -webkit-transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  -webkit-transition: transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  transition: transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  position: fixed;
  left: 0;
  top: 0;
  bottom: 0;
  width: 300px;
  z-index: 1;
  will-change: transform;
}

.c23 {
  min-width: 0;
  padding: 32px;
  position: relative;
  background: #fff;
  width: calc(100% - 300px);
  -webkit-transition: -webkit-transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  -webkit-transition: transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  transition: transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  will-change: transform;
}

.c0 {
  background: #fff;
}

.c0 .c5 {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.c0 .c22 {
  -webkit-transform: translateX(300px);
  -ms-transform: translateX(300px);
  transform: translateX(300px);
}

@media screen and (max-width:376px) {
  .c35 {
    -webkit-flex: 1 1 auto;
    -ms-flex: 1 1 auto;
    flex: 1 1 auto;
    overflow: hidden;
    text-overflow: ellipsis;
    word-break: initial;
  }
}

@media screen and (max-width:376px) {
  .c27 {
    padding-top: 16px;
  }
}

@media screen and (max-width:376px) {
  .c25 {
    min-width: auto;
  }
}

@media screen and (min-width:1440px) {
  .c25 {
    max-width: 1440px;
  }
}

@media screen and (max-width:376px) {
  .c3 {
    right: 16px;
    left: initial;
  }
}

@media screen and (max-width:376px) {
  .c0 .c5 {
    right: 0;
    width: auto;
  }
}

@media screen and (max-width:376px) {
  .c0 .c22 {
    width: 100%;
    -webkit-transform: translateX(0);
    -ms-transform: translateX(0);
    transform: translateX(0);
  }
}

<div
  className="c0"
>
  <div
    className="c1 c2"
    onClick={[Function]}
  >
    <svg
      id="open"
      viewBox="0 0 20 15"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M0 1a1 1 0 011-1h18a1 1 0 110 2H1a1 1 0 01-1-1zM0 7.03a1 1 0 011-1h18a1 1 0 110 2H1a1 1 0 01-1-1zM1 12.06a1 1 0 100 2h18a1 1 0 000-2H1z"
      />
    </svg>
  </div>
  <div
    className="c1 c3"
    onClick={[Function]}
  >
    <svg
      id="close"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M6.23 4.81A1 1 0 004.8 6.23L10.6 12 4.8 17.77a1 1 0 101.42 1.42L12 13.4l5.78 5.78a1 1 0 001.4-1.42L13.42 12l5.78-5.77a1 1 0 10-1.41-1.42L12 10.6 6.23 4.8z"
      />
    </svg>
  </div>
  <aside
    className="c4 c5 c6"
  >
    <div
      className="c7"
    >
      <div
        className="c8"
      >
        <svg
          viewBox="0 0 44 44"
          xmlns="http://www.w3.org/2000/svg"
        >
          <rect
            fill="#7000E3"
            height="44"
            rx="3.9"
            width="44"
          />
          <path
            d="M28 11.3c-2.3 0-4.6 1-6 3-1.4-2-3.7-3-6-3-4.3 0-7.8 3.3-7.8 7.6 0 6.5 9.3 15 13.8 15s13.8-8.5 13.8-15c0-4.4-3.5-7.7-7.8-7.7"
            fill="#FF671B"
          />
        </svg>
      </div>
      <div
        className="c9"
      >
        <div
          className="c10"
        >
          <input
            autoComplete="off"
            className="c11"
            placeholder="Search component name"
            type="text"
            value="c"
          />
          <div
            className="c12"
          >
            <div
              className="c13"
              role="presentation"
              size={0}
            >
              <svg
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M20.5 20.92l7.62 7.67-1.43 1.4-7.72-7.79A10.83 10.83 0 0 1 2 13.28v-.45a10.84 10.84 0 0 1 21.67 0v.45c0 2.98-1.21 5.68-3.16 7.64zM4 12.82v.46a8.83 8.83 0 0 0 17.67 0v-.45a8.83 8.83 0 0 0-17.67 0z"
                  fillRule="evenodd"
                />
              </svg>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="c14"
    >
      <nav
        className="c15"
      >
        <div
          className="c16"
        >
          <div
            className="c17"
          >
            <div
              className="c18"
              onClick={[Function]}
            >
              Structure
            </div>
            <div
              className="c19"
            >
              <div
                className="c20"
              >
                <a
                  className="c21"
                  data-vrt-locator="link"
                  href="#Structure-Component"
                >
                  Component
                </a>
              </div>
            </div>
          </div>
        </div>
      </nav>
    </div>
  </aside>
  <main
    className="c22 c23"
  >
    <section
      className="c24 "
    >
      <div
        className="c25"
      >
        <div
          className="c26 "
        >
          <article
            className="c27"
            data-id="component"
          >
            <header
              className="styleguide-component__header"
            >
              <h1
                className="c28"
              >
                Component
              </h1>
              <div
                className="c29"
              >
                
              </div>
            </header>
            <div
              className="c30"
            >
              <div
                className="c31 "
              >
                <section
                  className="c32"
                  data-name="SpecComponentEmpty"
                  data-vrt-locator="sandbox"
                >
                  <header
                    className="c33 c34"
                  >
                    <h1
                      className="c35"
                      onClick={[Function]}
                      title="SpecComponentEmpty"
                    >
                      SpecComponentEmpty
                    </h1>
                    <div
                      className="c36"
                    >
                      <span
                        className="c37"
                        onClick={[Function]}
                      >
                        <div
                          className="c38"
                          role="presentation"
                        >
                          <svg
                            height="16"
                            width="16"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M13.444 2H2.556C1.696 2 1 2.696 1 3.556v9.333c0 .859.696 1.555 1.556 1.555h3.11V12.89h-3.11V5.11h10.888v7.778h-3.11v1.555h3.11c.856 0 1.556-.7 1.556-1.555V3.556C15 2.696 14.304 2 13.444 2zM8 6.667l-3.111 3.11h2.333v4.667h1.556V9.778h2.333L8 6.667z"
                            />
                          </svg>
                        </div>
                      </span>
                      <span
                        className="c37"
                        onClick={[Function]}
                      >
                        <div
                          className="c38"
                          role="presentation"
                        >
                          <svg
                            height="16"
                            width="16"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M1 12h3v3h2v-5H1v2zm3-8H1v2h5V1H4v3zm6 11h2v-3h3v-2h-5v5zm2-11V1h-2v5h5V4h-3z"
                            />
                          </svg>
                        </div>
                      </span>
                    </div>
                  </header>
                  <div
                    data-vrt-locator="sandbox-content"
                  >
                    <div
                      className="c39"
                    >
                      <article
                        className="c27"
                      >
                        <header
                          className="styleguide-component__header"
                        >
                          <h1
                            className="c28"
                          />
                          <div
                            className="c29"
                          />
                        </header>
                      </article>
                    </div>
                  </div>
                </section>
              </div>
              <div
                className="c31 "
              >
                <section
                  className="c32"
                  data-name="SpecComponentPropTypes"
                  data-vrt-locator="sandbox"
                >
                  <header
                    className="c33 c34"
                  >
                    <h1
                      className="c35"
                      onClick={[Function]}
                      title="SpecComponentPropTypes"
                    >
                      SpecComponentPropTypes
                    </h1>
                    <div
                      className="c36"
                    >
                      <span
                        className="c37"
                        onClick={[Function]}
                      >
                        <div
                          className="c38"
                          role="presentation"
                        >
                          <svg
                            height="16"
                            width="16"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M13.444 2H2.556C1.696 2 1 2.696 1 3.556v9.333c0 .859.696 1.555 1.556 1.555h3.11V12.89h-3.11V5.11h10.888v7.778h-3.11v1.555h3.11c.856 0 1.556-.7 1.556-1.555V3.556C15 2.696 14.304 2 13.444 2zM8 6.667l-3.111 3.11h2.333v4.667h1.556V9.778h2.333L8 6.667z"
                            />
                          </svg>
                        </div>
                      </span>
                      <span
                        className="c37"
                        onClick={[Function]}
                      >
                        <div
                          className="c38"
                          role="presentation"
                        >
                          <svg
                            height="16"
                            width="16"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M1 12h3v3h2v-5H1v2zm3-8H1v2h5V1H4v3zm6 11h2v-3h3v-2h-5v5zm2-11V1h-2v5h5V4h-3z"
                            />
                          </svg>
                        </div>
                      </span>
                    </div>
                  </header>
                  <div
                    data-vrt-locator="sandbox-content"
                  >
                    <div
                      className="c39"
                    >
                      <article
                        className="c27"
                      >
                        <header
                          className="styleguide-component__header"
                        >
                          <h1
                            className="c28"
                          />
                          <div
                            className="c29"
                          />
                        </header>
                      </article>
                    </div>
                  </div>
                </section>
              </div>
              <div
                className="c31 "
              >
                <section
                  className="c32"
                  data-name="SpecComponentFull"
                  data-vrt-locator="sandbox"
                >
                  <header
                    className="c33 c34"
                  >
                    <h1
                      className="c35"
                      onClick={[Function]}
                      title="SpecComponentFull"
                    >
                      SpecComponentFull
                    </h1>
                    <div
                      className="c36"
                    >
                      <span
                        className="c37"
                        onClick={[Function]}
                      >
                        <div
                          className="c38"
                          role="presentation"
                        >
                          <svg
                            height="16"
                            width="16"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M13.444 2H2.556C1.696 2 1 2.696 1 3.556v9.333c0 .859.696 1.555 1.556 1.555h3.11V12.89h-3.11V5.11h10.888v7.778h-3.11v1.555h3.11c.856 0 1.556-.7 1.556-1.555V3.556C15 2.696 14.304 2 13.444 2zM8 6.667l-3.111 3.11h2.333v4.667h1.556V9.778h2.333L8 6.667z"
                            />
                          </svg>
                        </div>
                      </span>
                      <span
                        className="c37"
                        onClick={[Function]}
                      >
                        <div
                          className="c38"
                          role="presentation"
                        >
                          <svg
                            height="16"
                            width="16"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M1 12h3v3h2v-5H1v2zm3-8H1v2h5V1H4v3zm6 11h2v-3h3v-2h-5v5zm2-11V1h-2v5h5V4h-3z"
                            />
                          </svg>
                        </div>
                      </span>
                    </div>
                  </header>
                  <div
                    data-vrt-locator="sandbox-content"
                  >
                    <div
                      className="c39"
                    >
                      <article
                        className="c27"
                      >
                        <header
                          className="styleguide-component__header"
                        >
                          <h1
                            className="c28"
                          />
                          <div
                            className="c29"
                          />
                        </header>
                      </article>
                    </div>
                  </div>
                </section>
              </div>
            </div>
          </article>
        </div>
      </div>
    </section>
  </main>
</div>
`;

exports[`App-view generic tests When we open component from app 1`] = `
.c13 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  width: 24px;
  height: 24px;
  fill: currentColor;
  -webkit-transition: all 0.2s ease-in-out;
  transition: all 0.2s ease-in-out;
  color: inherit;
}

.c13 > svg {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  max-width: inherit;
  width: inherit;
  max-height: inherit;
  height: inherit;
  background: inherit;
  fill: inherit;
}

.c10 {
  position: relative;
  color: #ccc;
  font-family: sans-serif;
}

.c10:focus-within {
  color: #000;
}

.c11 {
  background-color: #fff;
  width: 100%;
  display: block;
  font-size: 16px;
  color: #303030;
  height: 40px;
  line-height: 32px;
  padding-left: calc(24px + 12px);
  border: 1px solid #ccc;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: none;
}

.c11:focus {
  border-color: #000;
}

.c11::-webkit-input-placeholder {
  color: #ccc;
  opacity: 1;
}

.c11:-moz-placeholder {
  color: #ccc;
  opacity: 1;
}

.c11::-moz-placeholder {
  color: #ccc;
  opacity: 1;
}

.c11:-ms-input-placeholder {
  color: #ccc;
  opacity: 1;
}

.c12 {
  position: absolute;
  top: 50%;
  left: 8px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: inherit;
}

.c17 {
  display: block;
}

.c18 {
  position: relative;
  display: block;
  padding: 16px;
  border-bottom: 1px solid #f0f0f0;
  background: #fff;
  color: #000;
  font-size: 16px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.c19 {
  padding: 16px;
  display: none;
}

.c20 {
  padding: 8px 16px;
}

.c21 {
  -webkit-text-decoration: none;
  text-decoration: none;
  color: #666;
}

.c15 {
  position: relative;
  max-height: 100vh;
  font-family: sans-serif;
}

.c16 {
  position: relative;
  margin: 0;
  padding: 0;
  list-style: none;
}

.c24 {
  padding-top: 32px;
}

.c25 {
  margin-top: 0;
  margin-bottom: 8px;
  font-size: 32px;
  color: #000;
  font-family: sans-serif;
  word-break: break-word;
}

.c26 {
  font-family: sans-serif;
  font-size: 16px;
  color: #a0a0a0;
  margin-bottom: 16px;
  max-width: 50%;
}

.c4 {
  -webkit-font-smoothing: antialiased;
  position: relative;
  height: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  background: #f0f0f0;
  border-right: 1px solid #f0f0f0;
  width: inherit;
}

.c7 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin: 16px 0;
  -webkit-flex: 0 0 auto;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
}

.c14 {
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  overflow-y: auto;
}

.c9 {
  width: 100%;
  padding: 0 16px;
}

.c8 {
  width: 32px;
  height: 32px;
  margin-bottom: 8px;
}

.c1 {
  position: fixed;
  z-index: 3;
  cursor: pointer;
  width: 24px;
  height: 24px;
  -webkit-transition: all 0.2s cubic-bezier(0.34,1.56,0.64,1);
  transition: all 0.2s cubic-bezier(0.34,1.56,0.64,1);
}

.c1 svg {
  pointer-events: none;
  fill: currentColor;
}

.c2 {
  top: 16px;
  left: 16px;
  -webkit-transform: translate3d(-50px,0px,0px);
  -ms-transform: translate3d(-50px,0px,0px);
  transform: translate3d(-50px,0px,0px);
}

.c3 {
  top: 16px;
  left: 316px;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
  opacity: 1;
}

.c6 {
  -webkit-transition: -webkit-transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  -webkit-transition: transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  transition: transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  position: fixed;
  left: 0;
  top: 0;
  bottom: 0;
  width: 300px;
  z-index: 1;
  will-change: transform;
}

.c23 {
  min-width: 0;
  padding: 32px;
  position: relative;
  background: #fff;
  width: calc(100% - 300px);
  -webkit-transition: -webkit-transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  -webkit-transition: transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  transition: transform 0.2s cubic-bezier(0.165,0.84,0.44,1);
  will-change: transform;
}

.c0 {
  background: #fff;
}

.c0 .c5 {
  -webkit-transform: translateX(0);
  -ms-transform: translateX(0);
  transform: translateX(0);
}

.c0 .c22 {
  -webkit-transform: translateX(300px);
  -ms-transform: translateX(300px);
  transform: translateX(300px);
}

@media screen and (max-width:376px) {
  .c24 {
    padding-top: 16px;
  }
}

@media screen and (max-width:376px) {
  .c3 {
    right: 16px;
    left: initial;
  }
}

@media screen and (max-width:376px) {
  .c0 .c5 {
    right: 0;
    width: auto;
  }
}

@media screen and (max-width:376px) {
  .c0 .c22 {
    width: 100%;
    -webkit-transform: translateX(0);
    -ms-transform: translateX(0);
    transform: translateX(0);
  }
}

<div
  className="c0"
>
  <div
    className="c1 c2"
    onClick={[Function]}
  >
    <svg
      id="open"
      viewBox="0 0 20 15"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M0 1a1 1 0 011-1h18a1 1 0 110 2H1a1 1 0 01-1-1zM0 7.03a1 1 0 011-1h18a1 1 0 110 2H1a1 1 0 01-1-1zM1 12.06a1 1 0 100 2h18a1 1 0 000-2H1z"
      />
    </svg>
  </div>
  <div
    className="c1 c3"
    onClick={[Function]}
  >
    <svg
      id="close"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M6.23 4.81A1 1 0 004.8 6.23L10.6 12 4.8 17.77a1 1 0 101.42 1.42L12 13.4l5.78 5.78a1 1 0 001.4-1.42L13.42 12l5.78-5.77a1 1 0 10-1.41-1.42L12 10.6 6.23 4.8z"
      />
    </svg>
  </div>
  <aside
    className="c4 c5 c6"
  >
    <div
      className="c7"
    >
      <div
        className="c8"
      >
        <svg
          viewBox="0 0 44 44"
          xmlns="http://www.w3.org/2000/svg"
        >
          <rect
            fill="#7000E3"
            height="44"
            rx="3.9"
            width="44"
          />
          <path
            d="M28 11.3c-2.3 0-4.6 1-6 3-1.4-2-3.7-3-6-3-4.3 0-7.8 3.3-7.8 7.6 0 6.5 9.3 15 13.8 15s13.8-8.5 13.8-15c0-4.4-3.5-7.7-7.8-7.7"
            fill="#FF671B"
          />
        </svg>
      </div>
      <div
        className="c9"
      >
        <div
          className="c10"
        >
          <input
            autoComplete="off"
            className="c11"
            placeholder="Search component name"
            type="text"
            value=""
          />
          <div
            className="c12"
          >
            <div
              className="c13"
              role="presentation"
              size={0}
            >
              <svg
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M20.5 20.92l7.62 7.67-1.43 1.4-7.72-7.79A10.83 10.83 0 0 1 2 13.28v-.45a10.84 10.84 0 0 1 21.67 0v.45c0 2.98-1.21 5.68-3.16 7.64zM4 12.82v.46a8.83 8.83 0 0 0 17.67 0v-.45a8.83 8.83 0 0 0-17.67 0z"
                  fillRule="evenodd"
                />
              </svg>
            </div>
          </div>
        </div>
      </div>
    </div>
    <div
      className="c14"
    >
      <nav
        className="c15"
      >
        <div
          className="c16"
        >
          <div
            className="c17"
          >
            <div
              className="c18"
              onClick={[Function]}
            >
              Structure
            </div>
            <div
              className="c19"
            >
              <div
                className="c20"
              >
                <a
                  className="c21"
                  data-vrt-locator="link"
                  href="#Structure-Component"
                >
                  Component
                </a>
              </div>
            </div>
          </div>
        </div>
        <div
          className="c16"
        >
          <div
            className="c17"
          >
            <div
              className="c18"
              onClick={[Function]}
            >
              Components
            </div>
            <div
              className="c19"
            >
              <div
                className="c20"
              >
                <a
                  className="c21"
                  data-vrt-locator="link"
                  href="#Components-ErrorBoundary"
                >
                  ErrorBoundary
                </a>
              </div>
            </div>
          </div>
        </div>
      </nav>
    </div>
  </aside>
  <main
    className="c22 c23"
  >
    <article
      className="c24"
      data-id="welcome!"
    >
      <header
        className="styleguide-component__header"
      >
        <h1
          className="c25"
        >
          Welcome!
        </h1>
        <div
          className="c26"
        >
          Style guide is a tool to illustrate, sandbox and test your components.
        </div>
      </header>
    </article>
  </main>
</div>
`;
